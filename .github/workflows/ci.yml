name: "ci"

on:
  push:
    branches: ["master"]
    tags: ["v*"]
  pull_request:
    branches: ["master"]

env:
  NODE_VERSION: "12.17.0"
  npm_config_user: "root"
  PYTHON_VERSION: "3.8"

jobs:
  dev:
    name: "Verify package is installed well"

    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]

    runs-on: "${{ matrix.os }}"

    steps:
      - uses: "actions/checkout@v2.3.1"

      - name: "Install node.js"
        uses: "actions/setup-node@v2.1.0"
        with:
          node-version: "${{ env.NODE_VERSION }}"

      - name: "Cache node_modules"
        uses: "actions/cache@v2.0.0"
        with:
          path: "node_modules"
          key: "venv-${{ hashFiles('package-lock.json') }}"

      - name: "Install package"
        run: "npm install"

      - name: "Babelify the source"
        run: "npm run prepublishOnly"

      - name: "Import package"
        run: |
          node -e "require('./lib')"

  test:
    needs: "dev"
    name: "Test package"

    runs-on: "ubuntu-latest"

    steps:
      - uses: "actions/checkout@v2.3.1"

      - name: "Install node.js"
        uses: "actions/setup-node@v2.1.0"
        with:
          node-version: "${{ env.NODE_VERSION }}"

      - name: "Cache node_modules"
        uses: "actions/cache@v2.0.0"
        with:
          path: "node_modules"
          key: "venv-${{ hashFiles('package-lock.json') }}"

      - name: "Install package"
        run: "npm install"

      - name: "Install Python"
        uses: "actions/setup-python@v2.0.1"
        with:
          python-version: "${{ env.PYTHON_VERSION }}"

      - name: "Cache pre-commit"
        uses: "actions/cache@v2.0.0"
        with:
          path: "~/.cache/pre-commit"
          key: "pre-commit-${{ env.PYTHON_VERSION }}-${{ env.NODE_VERSION }}-${{ hashFiles('.pre-commit-config.yaml') }}"

      - name: "Run pre-commit"
        uses: "pre-commit/action@v2.0.0"

  package:
    needs: "test"
    name: "Build & deploy package"

    runs-on: "ubuntu-latest"

    steps:
      - uses: "actions/checkout@v2.3.1"

      - name: "Install node.js"
        uses: "actions/setup-node@v2.1.0"
        with:
          node-version: "${{ env.NODE_VERSION }}"
          registry-url: "https://registry.npmjs.org"

      - name: "Cache node_modules"
        uses: "actions/cache@v2.0.0"
        with:
          path: "node_modules"
          key: "venv-${{ hashFiles('package-lock.json') }}"

      - name: "Install package"
        run: "npm install"

      - name: "Build package"
        run: "npm build"

      - name: "Publish package"
        if: "github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')"
        run: |
          set -e

          tag=latest

          if [ ${{ contains(github.event.ref, 'alpha') }} = true ]; then
            tag=alpha
          else
            if [ ${{ contains(github.event.ref, 'beta') }} = true ]; then
              tag=beta
            else
              if [ ${{ contains(github.event.ref, 'rc') }} = true ]; then
                tag=rc
              fi
            fi
          fi

          set -x
          npm publish --tag=${tag}
        env:
          NODE_AUTH_TOKEN: "${{ secrets.NPM_TOKEN }}"
